# Finding string in string
  The indexOf() method returns the index of (the position of) the first occurrence of a specified text in a string:
  The lastIndexOf() method returns the index of the last occurrence of a specified text in a string.
  Both indexOf(), and lastIndexOf() return -1 if the text is not found.
  Both methods accept a second int parameter as the starting position for the search.
  The search() method searches a string for a specified value and returns the position of the match.

  Did You Notice?***
  - The two methods, indexOf() and search(), are equal?
  - They accept the same arguments (parameters), and return the same value?
  - The two methods are NOT equal. These are the differences:
  - The search() method cannot take a second start position argument.
  - The indexOf() method cannot take powerful search values (regular expressions).
  - A string is converted to upper case with toUpperCase().
  - A string is converted to upper case with toLowerCase().
  - String.trim() removes whitespace from both sides of a string. If you need to support IE 8, you can use String.replace
    with a regular expression instead: str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '')
  - The charAt() method returns the character at a specified index (position) in a string:
  - The charCodeAt() method returns the unicode of the character at a specified index in a string.

# slicing
    There are 3 methods for extracting a part of a string:
    slice(start, end)
    substring(start, end)
    substr(start, length)

# Replacing
    The replace() method replaces a specified value with another value in a string. The replace() method does not change
    the string it is called on. It returns a new string. To replace case insensitive, use a regular expression with
    an /i flag (insensitive). Note that regular expressions are written without quotes.
    ex: str = "Please visit Microsoft!";
        var n = str.replace(/MICROSOFT/i, "W3Schools");
    To replace all matches, use a regular expression with a /g flag (global match)

**All string methods return a new string. They don't modify the original string.
  Formally said: Strings are immutable: Strings cannot be changed, only replaced.

# Converting a String to an Array
    If you want to work with a string as an array, you can convert it to an array.
    A string can be converted to an array with the split() method: txt.split(","); // it can be |, space or anything.
    If the separator is omitted, the returned array will contain the whole string in index [0].
    If the separator is "", the returned array will be an array of single characters


















